@article{epoch,
  author = {IEEE and The Open Group},
  title  = {The Open Group Base Specifications Issue 7, 2018 edition},
  year   = {2018}
}


@inproceedings{async_study,
  author    = {Okur, Semih and Hartveld, David L. and Dig, Danny and Deursen, Arie van},
  title     = {A Study and Toolkit for Asynchronous Programming in C#},
  year      = {2014},
  isbn      = {9781450327565},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2568225.2568309},
  doi       = {10.1145/2568225.2568309},
  abstract  = { Asynchronous programming is in demand today, because responsiveness is increasingly important on all modern devices. Yet, we know little about how developers use asynchronous programming in practice. Without such knowledge, developers, researchers, language and library designers, and tool providers can make wrong assumptions.  We present the first study that analyzes the usage of asynchronous programming in a large experiment. We analyzed 1378 open source Windows Phone (WP) apps, comprising 12M SLOC, produced by 3376 developers. Using this data, we answer 2 research questions about use and misuse of asynchronous constructs. Inspired by these findings, we developed (i) Asyncifier, an automated refactoring tool that converts callback-based asynchronous code to use async/await; (ii) Corrector, a tool that finds and corrects common misuses of async/await. Our empirical evaluation shows that these tools are (i) applicable and (ii) efficient. Developers accepted 314 patches generated by our tools. },
  booktitle = {Proceedings of the 36th International Conference on Software Engineering},
  pages     = {1117â€“1127},
  numpages  = {11},
  keywords  = {C#, Program transformation, asynchronous},
  location  = {Hyderabad, India},
  series    = {ICSE 2014}
}


@article{msdn_async_patterns,
  author       = { BillWagner and tdykstra and dsyme and gewarren and DennisLee-DennisLee and nschonni and mairaw and pkulikov and nemrism and lamLeX and Mikejo5000 and guardrex and tompratt-AQ and yishengjin1413},
  title        = {Asynchronous programming patterns},
  year         = {2022},
  url          = {https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns},
  howpublished = {\url{https://github.com/dotnet/docs/blob/main/docs/standard/asynchronous-programming-patterns/index.md}},
  journal      = {Microsoft Developer Network}
}

@article{fs_async,
  author  = {Don, Syme},
  journal = {Microsoft Developer Network},
  title   = {Introducing F# Asynchronous Workflows},
  year    = {2007}
}



https://docs.microsoft.com/en-us/archive/msdn-magazine/2019/november/csharp-iterating-with-async-enumerables-in-csharp-8
https://www.youtube.com/watch?v=w3hc7nxXxf4